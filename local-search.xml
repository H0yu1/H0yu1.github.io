<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>JavaScript学习</title>
    <link href="/2025/03/01/JavaScript%E5%AD%A6%E4%B9%A0/"/>
    <url>/2025/03/01/JavaScript%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h3 id="一、JavaScript输出"><a href="#一、JavaScript输出" class="headerlink" title="一、JavaScript输出"></a>一、JavaScript输出</h3><blockquote><p>注：便于写笔记，JavaScript全是写在HTML文档中的</p></blockquote><h4 id="1-使用window-alert"><a href="#1-使用window-alert" class="headerlink" title="1.使用window.alert()"></a>1.使用window.alert()</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>我的第一个页面<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>我的第一个段落。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"><span class="hljs-variable language_">window</span>.<span class="hljs-title function_">alert</span>(<span class="hljs-number">5</span> + <span class="hljs-number">6</span>);</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="2-操作HTML元素"><a href="#2-操作HTML元素" class="headerlink" title="2.操作HTML元素"></a>2.操作HTML元素</h4><p>如需从 JavaScript 访问某个 HTML 元素，您可以document.getElementById(<em>id</em>) 方法。请使用 “id” 属性来标识 HTML 元素，并 innerHTML 来获取或插入元素内容</p><p>eg:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;demo&quot;</span>&gt;</span>第一次使用document.getElementByid<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-variable language_">document</span>.<span class="hljs-property">getElement</span>.<span class="hljs-title class_">Byid</span>(<span class="hljs-string">&quot;demo&quot;</span>).<span class="hljs-property">innerHEML</span>=<span class="hljs-string">&quot;恭喜你学会了&quot;</span></span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="3-document-write"><a href="#3-document-write" class="headerlink" title="3. document.write()"></a>3. document.write()</h4><p>可向文档中写入内容</p><p>eg:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">write</span>(<span class="hljs-title class_">Date</span>());</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>补：如在文档完成加载后执行document.write(),整个HTML页面将被覆盖</p><p>eg:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>我的第一个 Web 页面<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>我的第一个段落。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;myFunction()&quot;</span>&gt;</span>点我<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">myFunction</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">   <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">write</span>(<span class="hljs-title class_">Date</span>());</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>可以自己新建一个html的文档试试效果</p></blockquote><h4 id="4-写到控制台"><a href="#4-写到控制台" class="headerlink" title="4.写到控制台"></a>4.写到控制台</h4><p>JavaScript程序可以在console进行调试，减少bug出现</p><h3 id="二、JavaScript语法"><a href="#二、JavaScript语法" class="headerlink" title="二、JavaScript语法"></a>二、JavaScript语法</h3><h4 id="1-字面量"><a href="#1-字面量" class="headerlink" title="1.字面量"></a>1.字面量</h4><ul><li>数字字面量：可以是整数、小数或者科学计数法（e），eg：3.14，123e5</li><li>字符串字面量：可以使用单引号或者双引号，eg：”java”或者’java’</li><li>表达式字面量：用于计算，eg：5+6</li><li>数组字面量：定义一个数组，eg：[40,100,2]</li><li>对象字面量：第一一个对象，eg：{firstname:”java”, lastname:”‘hello’}</li><li>函数字面量：定义一个函数，eg：function myFunction(a,b){return a*b;}</li></ul><h4 id="2-变量"><a href="#2-变量" class="headerlink" title="2.变量"></a>2.变量</h4><p>注：JavaScript对大小写敏感</p><p>使用var定义变量，使用等号赋值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> x,y;<br>x=<span class="hljs-number">2</span>;<br>y=<span class="hljs-number">3</span>;<br><span class="hljs-comment">//也可以在声明时对其进行赋值</span><br><span class="hljs-keyword">var</span> z=<span class="hljs-number">3</span>;<br></code></pre></td></tr></table></figure><p>未赋值的变量将是undefined</p><p><strong>如果重新声明 JavaScript 变量，该变量的值不会丢失</strong></p><p>eg：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">var</span> a=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">var</span> a;<br><span class="hljs-comment">//a的值还是1</span><br></code></pre></td></tr></table></figure><h4 id="3-操作符"><a href="#3-操作符" class="headerlink" title="3.操作符"></a>3.操作符</h4><ol><li>算术运算符：+ - * &#x2F;</li><li>赋值运算符：&#x3D;</li><li>其他：位运算符，条件运算符，比较运算符，逻辑运算符</li></ol><h4 id="4-语句"><a href="#4-语句" class="headerlink" title="4.语句"></a>4.语句</h4><p>JavaScript语句用于向浏览器发送命令，语句用<strong>分号隔开</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript">x=<span class="hljs-number">1</span>+<span class="hljs-number">2</span>;<br>y=<span class="hljs-number">2</span>+<span class="hljs-number">3</span>;<br><span class="hljs-comment">//另一个好处是使用分号可以一行编写多条语句</span><br>x=<span class="hljs-number">1</span>;y=<span class="hljs-number">2</span>;z=<span class="hljs-number">3</span>;<br></code></pre></td></tr></table></figure><p>语句标识符：</p><p><img src="D:\HEXO\hexo-blog\source_posts\JavaScript学习\语句标识符.png" alt="image-20250301162842320"></p><p><strong>JavaScript会忽略多余空格，可以向脚本中添加空格增加可读性</strong></p><p><strong>可以在文本字符串中使用反斜杠对代码进行换行</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//如下</span><br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">write</span>(<span class="hljs-string">&quot;hello \ world&quot;</span>)<span class="hljs-comment">//这是正确用法</span><br></code></pre></td></tr></table></figure><h4 id="5-关键字"><a href="#5-关键字" class="headerlink" title="5.关键字"></a>5.关键字</h4><p>太多了……</p><h4 id="6-注释"><a href="#6-注释" class="headerlink" title="6.注释"></a>6.注释</h4><p>使用**&#x2F;&#x2F;**双斜杠进行注释</p><p><strong>多行</strong>注释可用**&#x2F;* *&#x2F;**实现</p><h4 id="7-数据类型"><a href="#7-数据类型" class="headerlink" title="7.数据类型"></a>7.数据类型</h4><p>**值类型(基本类型)**：字符串（String）、数字(Number)、布尔(Boolean)、空（Null）、未定义（Undefined）、Symbol。</p><p><strong>引用数据类型（对象类型）</strong>：对象(Object)、数组(Array)、函数(Function)，还有两个特殊的对象：正则（RegExp）和日期（Date）。</p><blockquote><p><strong>注：</strong>*Symbol 是 ES6 引入了一种新的原始数据类型，表示独一无二的值。</p><p>布尔：只有两个值true或false</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> x=<span class="hljs-literal">true</span>;<br><span class="hljs-keyword">var</span> y=<span class="hljs-literal">false</span>;<br></code></pre></td></tr></table></figure></blockquote><p>JavaScript拥有动态类型，意味着相同变量可以用作不同的类型</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> x;<br><span class="hljs-keyword">var</span> x=<span class="hljs-number">5</span>;<br><span class="hljs-keyword">var</span> x=<span class="hljs-string">&quot;java&quot;</span><br></code></pre></td></tr></table></figure><p>变量类型可用typeof操作符来查看</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">typeof</span> <span class="hljs-string">&quot;John&quot;</span>                <span class="hljs-comment">// 返回 string</span><br><span class="hljs-keyword">typeof</span> <span class="hljs-number">3.14</span>                  <span class="hljs-comment">// 返回 number</span><br><span class="hljs-keyword">typeof</span> <span class="hljs-literal">false</span>                 <span class="hljs-comment">// 返回 boolean</span><br><span class="hljs-keyword">typeof</span> [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>]             <span class="hljs-comment">// 返回 object</span><br><span class="hljs-keyword">typeof</span> &#123;<span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;John&#x27;</span>, <span class="hljs-attr">age</span>:<span class="hljs-number">34</span>&#125; <span class="hljs-comment">// 返回 object</span><br></code></pre></td></tr></table></figure><h5 id="数组："><a href="#数组：" class="headerlink" title="数组："></a>数组：</h5><p>下面的代码创建名为 cars 的数组：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">var</span> cars=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>();<br>cars[<span class="hljs-number">0</span>]=<span class="hljs-string">&quot;Saab&quot;</span>;<br>cars[<span class="hljs-number">1</span>]=<span class="hljs-string">&quot;Volvo&quot;</span>;<br>cars[<span class="hljs-number">2</span>]=<span class="hljs-string">&quot;BMW&quot;</span>;<br><span class="hljs-comment">//或者</span><br><span class="hljs-keyword">var</span> cars=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-string">&quot;Saab&quot;</span>,<span class="hljs-string">&quot;Volvo&quot;</span>,<span class="hljs-string">&quot;BMW&quot;</span>);<br></code></pre></td></tr></table></figure><h5 id="对象："><a href="#对象：" class="headerlink" title="对象："></a>对象：</h5><p>对象由花括号分隔。在括号内部，对象的属性以名称和值对的形式 (name : value) 来定义。属性由逗号分隔；</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> person=&#123;<span class="hljs-attr">firstname</span>:<span class="hljs-string">&quot;John&quot;</span>, <span class="hljs-attr">lastname</span>:<span class="hljs-string">&quot;Doe&quot;</span>, <span class="hljs-attr">id</span>:<span class="hljs-number">5566</span>&#125;;<br><span class="hljs-comment">//对象属性的两种寻址方式</span><br>name=person.<span class="hljs-property">lastname</span>;<br>name=person[<span class="hljs-string">&quot;lastname&quot;</span>];<br></code></pre></td></tr></table></figure><h5 id="Undefined"><a href="#Undefined" class="headerlink" title="Undefined"></a>Undefined</h5><p>这个值表示变量不含有值。可以通过将变量的值设置为 null 来清空变量。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">cars=<span class="hljs-literal">null</span>;<br></code></pre></td></tr></table></figure><h5 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h5><p>可以使用索引位置访问字符串中的每个字符</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;demo&quot;</span>&gt;</span>hhh<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">var</span> a =<span class="hljs-string">&quot;hello&quot;</span>;</span><br><span class="language-javascript"><span class="hljs-keyword">let</span> letter =a[<span class="hljs-number">3</span>];</span><br><span class="language-javascript"><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementId</span>(<span class="hljs-string">&quot;demo&quot;</span>).<span class="hljs-property">innerHTML</span>=letter;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>计算<strong>字符串长度</strong>可用内置属性length</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> txt =<span class="hljs-string">&quot;qwertyu&quot;</span>;<br><span class="hljs-keyword">var</span> sln =txt.<span class="hljs-property">length</span>;<br></code></pre></td></tr></table></figure><p>一些<strong>特殊字符</strong>的写法，如双引号内还有双引号，可用<strong>转义字符</strong>来转义</p><table><thead><tr><th align="left">代码</th><th align="left">输出</th></tr></thead><tbody><tr><td align="left">\‘</td><td align="left">单引号</td></tr><tr><td align="left">\“</td><td align="left">双引号</td></tr><tr><td align="left">\\</td><td align="left">反斜杠</td></tr><tr><td align="left">\n</td><td align="left">换行</td></tr><tr><td align="left">\r</td><td align="left">回车</td></tr><tr><td align="left">\t</td><td align="left">tab(制表符)</td></tr><tr><td align="left">\b</td><td align="left">退格符</td></tr><tr><td align="left">\f</td><td align="left">换页符</td></tr></tbody></table><blockquote><p>注：表格前排的代码因为.md直接转义成转移后的模样，所以我多加了一个</p></blockquote><p><strong>字符串可以是对象</strong>通常， JavaScript 字符串是原始值，可以使用字符创建： **var firstName &#x3D; “John”**但我们也可以使用 new 关键字将字符串定义为一个对象： <strong>var firstName &#x3D; new String(“John”)</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;demo&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">var</span> x = <span class="hljs-string">&quot;John&quot;</span>;              <span class="hljs-comment">// x 是字符串</span></span><br><span class="language-javascript"><span class="hljs-keyword">var</span> y = <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(<span class="hljs-string">&quot;John&quot;</span>);  <span class="hljs-comment">// y 是一个对象</span></span><br><span class="language-javascript"><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;demo&quot;</span>).<span class="hljs-property">innerHTML</span> = x===y;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>=== 为绝对相等，即数据类型与值都必须相等。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>注：不要创建 String 对象。它会拖慢执行速度，并可能产生其他副作用</p></blockquote><p>声明变量类型：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">var</span> carname=<span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>;<br><span class="hljs-keyword">var</span> x=      <span class="hljs-keyword">new</span> <span class="hljs-title class_">Number</span>;<br></code></pre></td></tr></table></figure><h4 id="8-对象"><a href="#8-对象" class="headerlink" title="8.对象"></a>8.对象</h4><p>JavaScript对象是变量的容器</p><p>对象也是一个变量，但对象可以包含多个值（多个变量），每个值以 <strong>name:value</strong> 对呈现。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">var</span> car = &#123;<span class="hljs-attr">name</span>:<span class="hljs-string">&quot;Fiat&quot;</span>, <span class="hljs-attr">model</span>:<span class="hljs-number">500</span>, <span class="hljs-attr">color</span>:<span class="hljs-string">&quot;white&quot;</span>&#125;;<br></code></pre></td></tr></table></figure><p><strong>对象属性</strong>：JavaScript对象是键值对的容器，键值对的通常写法是：name:value（键与值以冒号分割），键值对在JavaScript对象称为对象属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-comment">//对象属性的两种寻址方式</span><br>name=person.<span class="hljs-property">lastname</span>;<br>name=person[<span class="hljs-string">&quot;lastname&quot;</span>];<br></code></pre></td></tr></table></figure><p><strong>对象方法</strong>：对象的方法定义了一个函数，并作为对象的属性存储。</p><p>对象方法通过添加 () 调用 (作为一个函数)。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-comment">//fullname()是作为person对象的一个方法，而fullname是作为一个属性如果使用fullname属性，不添加()，它会返回函数的定义</span><br>&lt;p id=<span class="hljs-string">&quot;demo1&quot;</span>&gt;&lt;/p&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;demo2&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">var</span> person = &#123;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-attr">firstName</span>: <span class="hljs-string">&quot;John&quot;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">    lastName : <span class="hljs-string">&quot;Doe&quot;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">    id : <span class="hljs-number">5566</span>,</span></span><br><span class="language-javascript"><span class="language-xml">    fullName : <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span></span><br><span class="language-javascript"><span class="language-xml">&#123;</span></span><br><span class="language-javascript"><span class="language-xml">       <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">firstName</span> + <span class="hljs-string">&quot; &quot;</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">lastName</span>;</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;demo1&quot;</span>).<span class="hljs-property">innerHTML</span> = person.<span class="hljs-title function_">fullName</span>();</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;demo2&quot;</span>).<span class="hljs-property">innerHTML</span> = person.<span class="hljs-property">fullName</span>;</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="hljs-comment">//输出为John Doe</span><br><span class="hljs-comment">/*输出为function() </span><br><span class="hljs-comment">&#123;</span><br><span class="hljs-comment">       return this.firstName + &quot; &quot; + this.lastName;</span><br><span class="hljs-comment">    &#125;</span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure><h4 id="9-函数"><a href="#9-函数" class="headerlink" title="9.函数"></a>9.函数</h4><p>关键词为function;</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">functionname</span>(<span class="hljs-params"></span>)<br>&#123;<br>   <span class="hljs-comment">//执行代码</span><br>&#125;<br></code></pre></td></tr></table></figure><p>带参数的函数：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">myfunction</span>(<span class="hljs-params">var1,var2</span>)<br>&#123;<br><span class="hljs-comment">//代码</span><br>&#125;<br></code></pre></td></tr></table></figure><p>带返回值的函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">myfunction</span>(<span class="hljs-params"></span>)<br>&#123;<br><span class="hljs-comment">//代码</span><br><span class="hljs-keyword">return</span> x;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="10-事件："><a href="#10-事件：" class="headerlink" title="10.事件："></a>10.事件：</h4><p>常见的HTML事件</p><table><thead><tr><th>事件</th><th>描述</th></tr></thead><tbody><tr><td>onchange</td><td>HTML 元素改变</td></tr><tr><td>onclick</td><td>用户点击 HTML 元素</td></tr><tr><td>onmouseover</td><td>鼠标指针移动到指定的元素上时发生</td></tr><tr><td>onmouseout</td><td>用户从一个 HTML 元素上移开鼠标时发生</td></tr><tr><td>onkeydown</td><td>用户按下键盘按键</td></tr><tr><td>onload</td><td>浏览器已完成页面的加载</td></tr></tbody></table><blockquote><p>注：更多的在HTML DOM事件中，<a src="[HTML DOM 事件对象 | 菜鸟教程](https://www.runoob.com/jsref/dom-obj-event.html)">完整版</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CSS学习</title>
    <link href="/2025/03/01/CSS%E5%AD%A6%E4%B9%A0/"/>
    <url>/2025/03/01/CSS%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<p>注：CSS先学到这吧，虽然可能很少，只学了选择器，嘿嘿不管了，作者进军JavaScript了</p><h3 id="一、css导入方式"><a href="#一、css导入方式" class="headerlink" title="一、css导入方式"></a>一、css导入方式</h3><blockquote><p>注：优先级：就近原则</p></blockquote><h4 id=""><a href="#" class="headerlink" title=""></a><!--行内样式--></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;color:red&quot;</span>&gt;</span>我是标题<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span>&gt;<br></code></pre></td></tr></table></figure><h4 id="-1"><a href="#-1" class="headerlink" title=""></a><!--内部样式--></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-tag">h1</span>&#123;</span><br><span class="language-css"><span class="hljs-attribute">color</span>:green</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="-2"><a href="#-2" class="headerlink" title=""></a><!--外部样式--></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!--链接式--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;css/style.css&quot;</span>&gt;</span><br><span class="hljs-comment">&lt;!--导入式,CSS2.1中,且内容较多时会先加载出网页结构，再进行渲染--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">    <span class="hljs-keyword">@import</span> url(<span class="hljs-string">&quot;css/style.css&quot;</span>);</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="二、基本选择器"><a href="#二、基本选择器" class="headerlink" title="二、基本选择器"></a>二、基本选择器</h3><blockquote><p>注：优先级：id选择器 &gt; class选择器 &gt; 标签选择器</p></blockquote><h4 id="1-标签选择器"><a href="#1-标签选择器" class="headerlink" title="1.标签选择器"></a>1.标签选择器</h4><p>标签选择器会选择页面上所有的这个标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">    <span class="hljs-selector-tag">h1</span>&#123;</span><br><span class="language-css">        <span class="hljs-attribute">color</span>:green;</span><br><span class="language-css">    &#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>我是标题<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>我是标题<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>我是标题<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="2-类选择器"><a href="#2-类选择器" class="headerlink" title="2.类选择器"></a>2.类选择器</h4><blockquote><p>注:不要用以数字开头的id，它无法在 Mozilla 或 Firefox 中起作用</p></blockquote><p>格式：.class的名称{}</p><p>好处:可以多个标签归类</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">    <span class="hljs-selector-class">.hhh</span>&#123;</span><br><span class="language-css">        <span class="hljs-attribute">color</span>:red;</span><br><span class="language-css">    &#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h1</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;hhh&quot;</span>&gt;</span>我是标题<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br></code></pre></td></tr></table></figure><style>    .hhh{        color:red;    }</style><h2 class="hhh">标题</h2><h4 id="3-id选择器"><a href="#3-id选择器" class="headerlink" title="3.id选择器"></a>3.id选择器</h4><blockquote><p>注:不要用以数字开头的id，它无法在 Mozilla 或 Firefox 中起作用</p></blockquote><p>格式：#id名称{}</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">    <span class="hljs-selector-id">#hh</span>&#123;</span><br><span class="language-css">        <span class="hljs-attribute">color</span>:red;</span><br><span class="language-css">    &#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h1</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;hh&quot;</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="三、层次选择器"><a href="#三、层次选择器" class="headerlink" title="三、层次选择器"></a>三、层次选择器</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>5<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>6<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><br></code></pre></td></tr></table></figure><h4 id="1-后代选择器"><a href="#1-后代选择器" class="headerlink" title="1.后代选择器"></a>1.后代选择器</h4><p>在某个元素后面</p><style>    body p{        backgroud:blank;    }</style><p>即body后面的p标签背景全部为黑色</p><h4 id="2-子选择器"><a href="#2-子选择器" class="headerlink" title="2.子选择器"></a>2.子选择器</h4><p>下面的一代，隔一代就没有了</p><style>    body>p{        backgroud:red;    }</style><h4 id="3-相邻兄弟选择器"><a href="#3-相邻兄弟选择器" class="headerlink" title="3.相邻兄弟选择器"></a>3.相邻兄弟选择器</h4><p>向下相邻，即只有下面一个</p><style>    .class+p{        backgroud:red;    }</style><h4 id="4-通用选择器"><a href="#4-通用选择器" class="headerlink" title="4.通用选择器"></a>4.通用选择器</h4><p>通用兄弟选择器，当前选中元素的向下所有同辈兄弟</p><style>    .class~p{        backgroud:red;    }</style><h3 id="三、结构伪类选择器"><a href="#三、结构伪类选择器" class="headerlink" title="三、结构伪类选择器"></a>三、结构伪类选择器</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>5<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>6<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br></code></pre></td></tr></table></figure><!--当想选中ul下的第一个子元素时><style><!--当想选中ul下的第一个子元素时>    ul li:first-child{background:red;}<!--当想选中ul下的最后一个子元素时--><p>ul li:last-child{<br>background:green;<br>}</p><!--当想选中p1：定位到父元素，选择当前的第一个元素，选择当前p元素的父级元素，选中父级元素的第一个，并且是当前元素才生效--><p>p:nth-child(1){<br>    ……<br>    }<br></style></p>]]></content>
    
    
    <categories>
      
      <category>CSS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTML基础学习</title>
    <link href="/2025/02/22/html/"/>
    <url>/2025/02/22/html/</url>
    
    <content type="html"><![CDATA[<blockquote><p>注：作者看两三个视频讲解html，发现<a href="https://www.runoob.com/html/html-tutorial.html">HTML 教程 | 菜鸟教程</a>这个网页很好</p><p>此文章为作者学习html笔记，作者html先学到这，接下来进军CSS</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span>    <br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>这里网页标题,显示在网页标签栏<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>此处用p语句写文章主要段落<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>可以用h1，h2……<br>        来标注文章标题1，标题2……<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="一、基本标签"><a href="#一、基本标签" class="headerlink" title="一、基本标签"></a>一、基本标签</h3><h4 id="1-标题标签"><a href="#1-标题标签" class="headerlink" title="1.标题标签"></a>1.标题标签</h4><p>下面即为各级标题标签样式：</p><h1>一级标签h1</h1><h2>二级标签h2</h2><h3>三级标签h3</h3><h4 id="2-段落标签"><a href="#2-段落标签" class="headerlink" title="2.段落标签"></a>2.段落标签</h4><p>即为<p></p><p>这句话即为段落标签呈现的样式</p><h4 id="3-换行标签"><a href="#3-换行标签" class="headerlink" title="3.换行标签"></a>3.换行标签</h4><p>即为<br>br,此标签为单标签</p><h4 id="4-粗体、斜体"><a href="#4-粗体、斜体" class="headerlink" title="4.粗体、斜体"></a>4.粗体、斜体</h4><p>粗体：<strong>这中间即添加要加粗且具有强调作用–strong</strong></p><p>斜体：<em>这为斜体–em</em></p><h4 id="5-特殊符号"><a href="#5-特殊符号" class="headerlink" title="5.特殊符号"></a>5.特殊符号</h4><p>eg:</p><p>空格：空&nbsp;格，即为&amp;nbsp；——可以即为牛逼沙皮</p><blockquote><p>注：分号别忘了；</p></blockquote><p>大于号：&gt;——即为&amp;gt；</p><p>小于号：&lt;——即为&amp;lt；</p><p>版权符号：&copy;——即为&amp;copy；</p><h4 id="6-水平线标签"><a href="#6-水平线标签" class="headerlink" title="6.水平线标签"></a>6.水平线标签</h4><hr><p>即为hr</p><h3 id="二、图像标签"><a href="#二、图像标签" class="headerlink" title="二、图像标签"></a>二、图像标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;path&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;x&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;y&quot;</span>/&gt;</span><br></code></pre></td></tr></table></figure><p>src：图像地址——分为相对路径和绝对路径</p><p>alt：图像替代文字；</p><p>title：鼠标悬停文字</p><h3 id="三、链接标签"><a href="#三、链接标签" class="headerlink" title="三、链接标签"></a>三、链接标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;path&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;目标窗口位置&quot;</span>&gt;</span>点击跳转<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><p>href必填，表示跳转到的哪个网页</p><p>补充：..&#x2F;表示上一级目录</p><h4 id="关于target的补充："><a href="#关于target的补充：" class="headerlink" title="关于target的补充："></a>关于target的补充：</h4><blockquote><p><strong>_self</strong></p><p>表示在同一窗口或标签页中打开链接文档。通常情况下，不需要显式指定这个值。例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://www.example.com&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_self&quot;</span>&gt;</span>链接<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><p>适用于不需要新开标签或窗口的情况</p><p><strong>_blank</strong></p><p><em>_blank</em> 表示在新的窗口或标签页中打开链接文档。这种方式适用于需要在新标签页或新窗口中打开链接，同时保留原页面的浏览。例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://www.example.com&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span>&gt;</span>链接<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><p>在使用 <em>_blank</em> 打开的链接时，建议添加 <em>rel&#x3D;”noopener noreferrer”</em> 属性，以防止被打开的页面访问原页面的 <em>window</em> 对象，提高安全性</p><p><strong>_parent</strong></p><p><em>_parent</em> 表示在父框架中打开链接文档。如果当前页面没有父框架，则效果与 <em>_self</em> 相同。例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://www.example.com&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_parent&quot;</span>&gt;</span>链接<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><p>适用于嵌套框架的情况。</p><p><strong>_top</strong></p><p><em>_top</em> 表示在整个浏览器窗口中打开链接文档，覆盖掉任何嵌套的框架。例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://www.example.com&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_top&quot;</span>&gt;</span>链接<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><p>适用于需要在最顶层窗口中打开链接的情况。</p></blockquote><h4 id="2-锚链接"><a href="#2-锚链接" class="headerlink" title="2.锚链接"></a>2.锚链接</h4><p>需要一个标记，在跳转至标记</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;top&quot;</span>&gt;</span>顶部<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-comment">&lt;!--在像跳转的地方加上这个，此即为标记的标准--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#top&quot;</span>&gt;</span>回到顶部<span class="hljs-comment">&lt;!--#加上标记的名字&gt;</span><br><span class="hljs-comment">&lt;!--也可以组合使用--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://www.example.com#top&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="3-功能性链接"><a href="#3-功能性链接" class="headerlink" title="3.功能性链接"></a>3.功能性链接</h4><h5 id="邮件链接：mailto"><a href="#邮件链接：mailto" class="headerlink" title="邮件链接：mailto"></a>邮件链接：mailto</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;mailto:邮箱地址&quot;</span>&gt;</span>点击联系我<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><h5 id="QQ链接"><a href="#QQ链接" class="headerlink" title="QQ链接"></a>QQ链接</h5><p>使用QQ推广，复制代码即可</p><h3 id="四、列表标签"><a href="#四、列表标签" class="headerlink" title="四、列表标签"></a>四、列表标签</h3><h4 id="1-有序列表："><a href="#1-有序列表：" class="headerlink" title="1.有序列表："></a>1.有序列表：<ol></h4><ol>    <li>java</li>    <li>c++</li>    <li>python</li></ol><h4 id="2-无序列表"><a href="#2-无序列表" class="headerlink" title="2.无序列表"></a>2.无序列表<ul></h4><ul>    <li>java<li>    <li>c++<li>    <li>python<li></ul><h4 id="3-自定义列表"><a href="#3-自定义列表" class="headerlink" title="3.自定义列表"></a>3.自定义列表</h4><p>dl：标签</p><p>dt：列表名称</p><p>dd：列表内容</p><p>eg:</p><dl>    <dt>学科</dt>    <dd>JAVA</dd>    <dd>C++</dd>    <dt>位置</dt>    <dd>北京</dd>    <dd>南京</dd></dl><blockquote><p>补：多用于网页底部</p></blockquote><h3 id="表格标签"><a href="#表格标签" class="headerlink" title="表格标签"></a>表格标签</h3><p>table</p><p>行——tr</p><p>列——td</p><p>eg:</p><table>    <tr>        <td>1-1</td>        <td>1-2</td>        <td>1-3</td>    <tr>        <td>2-1</td>        <td>2-2</td>        <td>2-3</td></table>跨列：colspan<p>跨行：rowspan</p><table>    <tr>        <td colspan="3">1-1</td>    </tr>    <tr>        <td>1-2</td>        <td>1-3</td>    </tr>    <tr>        <td rowspan="2">2-1</td>    </tr>    <tr>        <td>2-2</td>        <td>2-3</td>    </tr></table><h3 id="五、页面结构"><a href="#五、页面结构" class="headerlink" title="五、页面结构"></a>五、页面结构</h3><p><img src="D:\HEXO\hexo-blog\source_posts\html\页面结构.jpg" alt="页面结构"></p><h3 id="六、iframe"><a href="#六、iframe" class="headerlink" title="六、iframe"></a>六、iframe</h3><p>内联框架,可以在网页内直接访问其他网站</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;path&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;mainFrame&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot; px&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot; px&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">iframe</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="七、表单"><a href="#七、表单" class="headerlink" title="七、表单"></a>七、表单</h3><h4 id="post和get"><a href="#post和get" class="headerlink" title="post和get"></a>post和get</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;result.html&quot;</span>&gt;</span><br><span class="hljs-comment">&lt;!--method：post，get规定如何发送表单数据--&gt;</span><br><span class="hljs-comment">&lt;!--action表示向何处发送表单数据,可以是网站，也可以是一个请求处理地址--&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><p>eg:</p><form method="post" action="https://www.example.com">    <p>名字<input type="text" name="username"></p>    <p>密码<input type="password" name="password"></p>    <p>    <input type="submit">    <input type="reset">    </p><p>post :提交比较安全，传输大文件</p><p>get:可以看到具体提交内容，不安全</p><h4 id="input输入标签"><a href="#input输入标签" class="headerlink" title="input输入标签"></a>input输入标签</h4><p>有type属性定义类型<input type=""></p><p>几种常见类型 eg：</p><h5 id="text"><a href="#text" class="headerlink" title="text"></a>text</h5><p>：当用户要在表单中输入字母数字时，就会用到文本域</p><form>First name: <input type="text" name="firstname"><br>Last name: <input type="text" name="lastname"></form><p>（文本域的默认宽度是 20 个字符</p><h5 id="password"><a href="#password" class="headerlink" title="password"></a>password</h5><p>：密码字段通过标签 <strong><input type="password"></strong></p><p>eg:</p><form>Password: <input type="password" name="pwd"></form><h5 id="radio"><a href="#radio" class="headerlink" title="radio"></a>radio</h5><p>单选按钮</p><p>eg:</p><form action=""><input type="radio" name="sex" value="male">男<br><input type="radio" name="sex" value="female">女</form><h5 id="checkbox"><a href="#checkbox" class="headerlink" title="checkbox"></a>checkbox</h5><p>多选框</p><p>eg：</p><form><input type="checkbox" name="vehicle[]" value="Bike">我喜欢自行车<br><input type="checkbox" name="vehicle[]" value="Car">我喜欢小汽车</form><h5 id="submit"><a href="#submit" class="headerlink" title="submit"></a>submit</h5><p>提交按钮</p><form name="input" action="html_form_action.php" method="get">Username: <input type="text" name="user"><input type="submit" value="Submit"></form><h5 id="select"><a href="#select" class="headerlink" title="select"></a>select</h5><p>下拉框</p><p>eg：</p><form action=""><select name="cars"><option value="volvo">Volvo</option><option value="saab">Saab</option><option value="fiat">Fiat</option><option value="audi">Audi</option></select></form><h3 id="八、其他"><a href="#八、其他" class="headerlink" title="八、其他"></a>八、其他</h3><h4 id="1-meta"><a href="#1-meta" class="headerlink" title="1.meta"></a>1.meta</h4><p>将其加在head部分</p><h5 id="1）声明字符编码"><a href="#1）声明字符编码" class="headerlink" title="1）声明字符编码"></a>1）声明字符编码</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span> <br></code></pre></td></tr></table></figure><h5 id="2）实现网页自适应"><a href="#2）实现网页自适应" class="headerlink" title="2）实现网页自适应"></a>2）实现网页自适应</h5><h5 id="3）实现搜索引擎优化"><a href="#3）实现搜索引擎优化" class="headerlink" title="3）实现搜索引擎优化"></a>3）实现搜索引擎优化</h5><meta "description" content="此处写大致网页内容"><meta "name"="keywords"content="此处写网页关键词"><meta "author"content="此处写作者名"><blockquote><p><code>注：这些内容不会在网页上显示，但爬虫会爬取这些内容，实现优先推荐</code></p></blockquote><h5 id="4）实现自动跳转"><a href="#4）实现自动跳转" class="headerlink" title="4）实现自动跳转"></a>4）实现自动跳转</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;refresh&quot;</span><span class="hljs-attr">content</span>=<span class="hljs-string">&quot;此处为填写多长时间后跳转;此处写跳转网页的URL&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="2-style"><a href="#2-style" class="headerlink" title="2.style"></a>2.style</h4><p>可出现在任何位置</p><h5 id="属性："><a href="#属性：" class="headerlink" title="属性："></a>属性：</h5><ul><li>media：媒体, screen&#x2F;print&#x2F;all，表示在什么情况下使用该元素定义的样式</li><li>scoped：范围</li><li>type：类型,text&#x2F;css</li></ul><p>eg：</p><style type="text/css">    h1 {color:red}    a {        color:yellow;        background:black;    }    body {        background-image:url("图片路径")    }    h1 {        text-align:center;        #此操作为将文章h1标题居中        magin-left: 60%;        #左边距        }p {    text-indent: 32px;        #缩进32个像素    font-size: 16px;        #字体尺寸    line-height:32px;        #行高}    #大括号内为css代码，以此实现美化</style><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">media</span>=<span class="hljs-string">&quot;print&quot;</span>&gt;</span><span class="language-css"></span><br><span class="language-css">    <span class="hljs-selector-tag">h1</span> &#123;</span><br><span class="language-css">        此为打印模式下，使用的样式</span><br><span class="language-css">    &#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><style media="screen">#### 3.link##### 1）链接外部样式表（将style从中抽出，避免太多）##### 属性：![link属性](D:\HEXO\hexo-blog\source\_posts\html\link属性.jpg)> 注：其中rel属性是必选的，它说明当前文档与被链接资源之间的关系eg:<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span> <span class="hljs-attr">media</span>=<span class="hljs-string">&quot;此处写要显示的设备&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;填写文件名&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure>##### 2）链接网站图标即favicon，rel改为icon<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;icon&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;image/x-icon&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;文件地址&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure>#### 3.basehref——指HTML所有相对链接的基准URLtarget——指在何处打开超链接> ##### 1）指定基准路径eg：<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">base</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;绝对路径&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;属性&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">base</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;test&quot;</span>&gt;</span> 例子<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure>这样就可以减少在后面使用相对路径的书写量，此时test即为在决定路径下进行寻找test文件]]></content>
    
    
    <categories>
      
      <category>html</category>
      
    </categories>
    
    
    <tags>
      
      <tag>html</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/11/01/hello-world/"/>
    <url>/2024/11/01/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
